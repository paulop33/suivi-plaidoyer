{% extends '@EasyAdmin/page/content.html.twig' %}

{% block content %}
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <h3 class="card-title mb-0">
                            <i class="fas fa-check-double me-2"></i>
                            Engager la liste sur toutes les propositions
                        </h3>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Liste sélectionnée :</strong> {{ candidateList.nameList }}
                            ({{ candidateList.firstname }} {{ candidateList.lastname }} - {{ candidateList.city.name }})
                        </div>

                        <form method="post" id="batchCommitmentForm" action="{{ ea_url().setController('App\\Controller\\Admin\\CandidateListCrudController').setAction('batchCommitment').setEntityId(candidateList.id) }}">
                            <div class="row mb-4">
                                <div class="col-md-12">
                                    <label for="global_comment" class="form-label">
                                        <i class="fas fa-comment me-1"></i>
                                        Commentaire global de la liste (optionnel)
                                    </label>
                                    <textarea
                                        class="form-control"
                                        id="global_comment"
                                        name="global_comment"
                                        rows="3"
                                        maxlength="1000"
                                        placeholder="Ce commentaire sera associé à la liste candidate..."
                                    >{{ candidateList.globalComment ?? '' }}</textarea>
                                    <div class="form-text">
                                        Ce commentaire est associé à la liste candidate et non aux propositions individuelles.
                                        <span id="charCount" class="text-muted">({{ candidateList.globalComment ? candidateList.globalComment|length : 0 }}/1000 caractères)</span>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <h5><i class="fas fa-list me-2"></i>Sélectionner les propositions</h5>
                                </div>
                                <div class="col-md-6 text-end">
                                    <button type="button" class="btn btn-outline-primary btn-sm" id="selectAll">
                                        <i class="fas fa-check-square me-1"></i>Tout sélectionner
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary btn-sm" id="selectNone">
                                        <i class="fas fa-square me-1"></i>Tout désélectionner
                                    </button>
                                </div>
                            </div>

                            <div class="propositions-list">
                                {% set currentCategory = null %}
                                {% for proposition in propositions %}
                                    {% if currentCategory != proposition.category.name %}
                                        {% if currentCategory is not null %}
                                            </div> <!-- Close previous category -->
                                        {% endif %}
                                        {% set currentCategory = proposition.category.name %}
                                        <div class="category-section mb-4">
                                            <h6 class="category-header bg-light p-2 rounded">
                                                <i class="fas fa-tag me-2"></i>{{ currentCategory }}
                                            </h6>
                                    {% endif %}

                                    <div class="form-check proposition-item p-3 border rounded mb-2 {% if existingCommitments[proposition.id] is defined %}bg-light{% endif %}">
                                        <input
                                            class="form-check-input proposition-checkbox"
                                            type="checkbox"
                                            name="propositions[]"
                                            value="{{ proposition.id }}"
                                            id="prop_{{ proposition.id }}"
                                            {% if existingCommitments[proposition.id] is defined %}checked{% endif %}
                                        >
                                        <label class="form-check-label w-100" for="prop_{{ proposition.id }}">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div class="flex-grow-1">
                                                    <strong>{{ proposition.title }}</strong>
                                                    {% if proposition.description %}
                                                        <div class="text-muted small mt-1">
                                                            {{ proposition.description|slice(0, 150) }}{% if proposition.description|length > 150 %}...{% endif %}
                                                        </div>
                                                    {% endif %}
                                                </div>
                                                <div class="ms-3 d-flex flex-column align-items-end">
                                                    <div class="mb-2">
                                                        {% if existingCommitments[proposition.id] is defined %}
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-check me-1"></i>Déjà engagé
                                                            </span>
                                                            {% if existingCommitments[proposition.id].commentCandidateList %}
                                                                <div class="small text-muted mt-1">
                                                                    <i class="fas fa-sticky-note me-1"></i>Avec commentaire
                                                                </div>
                                                            {% endif %}
                                                        {% else %}
                                                            <span class="badge bg-secondary">
                                                                <i class="fas fa-plus me-1"></i>Nouveau
                                                            </span>
                                                        {% endif %}
                                                    </div>
                                                    <button type="button" class="btn btn-outline-info btn-sm toggle-comment-btn" data-proposition-id="{{ proposition.id }}">
                                                        <i class="fas fa-comment-plus me-1"></i>Commentaire
                                                    </button>
                                                </div>
                                            </div>
                                        </label>

                                        <!-- Zone de commentaire spécifique à la proposition (masquée par défaut) -->
                                        <div class="proposition-comment-area mt-3" id="comment-area-{{ proposition.id }}" style="display: none;">
                                            <div class="border-top pt-3">
                                                <label for="proposition_comment_{{ proposition.id }}" class="form-label small">
                                                    <i class="fas fa-sticky-note me-1"></i>
                                                    Commentaire spécifique à cette proposition
                                                </label>
                                                <textarea
                                                    class="form-control form-control-sm proposition-comment"
                                                    id="proposition_comment_{{ proposition.id }}"
                                                    name="proposition_comments[{{ proposition.id }}]"
                                                    rows="2"
                                                    maxlength="1000"
                                                    placeholder="Commentaire spécifique pour cette proposition..."
                                                >{% if existingCommitments[proposition.id] is defined and existingCommitments[proposition.id].commentCandidateList %}{{ existingCommitments[proposition.id].commentCandidateList }}{% endif %}</textarea>
                                                <div class="form-text small">
                                                    <span class="comment-char-count" data-proposition-id="{{ proposition.id }}">
                                                        ({% if existingCommitments[proposition.id] is defined and existingCommitments[proposition.id].commentCandidateList %}{{ existingCommitments[proposition.id].commentCandidateList|length }}{% else %}0{% endif %}/1000 caractères)
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                {% endfor %}
                                {% if currentCategory is not null %}
                                    </div> <!-- Close last category -->
                                {% endif %}
                            </div>

                            <div class="row mt-4">
                                <div class="col-12">
                                    <div class="d-flex justify-content-between">
                                        <a href="{{ ea_url().setController('App\\Controller\\Admin\\CandidateListCrudController').setAction('detail').setEntityId(candidateList.id) }}"
                                           class="btn btn-secondary">
                                            <i class="fas fa-arrow-left me-1"></i>Retour
                                        </a>
                                        <button type="submit" class="btn btn-success btn-lg" id="submitBtn">
                                            <i class="fas fa-save me-2"></i>Enregistrer les engagements
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const selectAllBtn = document.getElementById('selectAll');
            const selectNoneBtn = document.getElementById('selectNone');
            const checkboxes = document.querySelectorAll('.proposition-checkbox');
            const submitBtn = document.getElementById('submitBtn');
            const form = document.getElementById('batchCommitmentForm');
            const globalComment = document.getElementById('global_comment');
            const charCount = document.getElementById('charCount');

            // Fonction pour mettre à jour le compteur
            function updateCounter() {
                const checkedCount = document.querySelectorAll('.proposition-checkbox:checked').length;
                submitBtn.innerHTML = `<i class="fas fa-save me-2"></i>Enregistrer les engagements (${checkedCount})`;
                submitBtn.disabled = checkedCount === 0;
            }

            // Sélectionner tout
            selectAllBtn.addEventListener('click', function() {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = true;
                });
                updateCounter();
            });

            // Désélectionner tout
            selectNoneBtn.addEventListener('click', function() {
                checkboxes.forEach(checkbox => {
                    checkbox.checked = false;
                });
                updateCounter();
            });

            // Écouter les changements sur les checkboxes
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateCounter);
            });

            // Compteur de caractères pour le commentaire
            function updateCharCount() {
                const length = globalComment.value.length;
                charCount.textContent = `(${length}/1000 caractères)`;
                charCount.className = length > 900 ? 'text-warning' : length > 1000 ? 'text-danger' : 'text-muted';
            }

            globalComment.addEventListener('input', updateCharCount);

            // Gestion des boutons de commentaire par proposition
            const toggleCommentBtns = document.querySelectorAll('.toggle-comment-btn');
            const propositionComments = document.querySelectorAll('.proposition-comment');

            toggleCommentBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();

                    const propositionId = this.getAttribute('data-proposition-id');
                    const commentArea = document.getElementById(`comment-area-${propositionId}`);
                    const icon = this.querySelector('i');

                    if (commentArea.style.display === 'none') {
                        commentArea.style.display = 'block';
                        icon.className = 'fas fa-comment-minus me-1';
                        this.innerHTML = '<i class="fas fa-comment-minus me-1"></i>Masquer';
                        this.classList.remove('btn-outline-info');
                        this.classList.add('btn-outline-warning');
                    } else {
                        commentArea.style.display = 'none';
                        icon.className = 'fas fa-comment-plus me-1';
                        this.innerHTML = '<i class="fas fa-comment-plus me-1"></i>Commentaire';
                        this.classList.remove('btn-outline-warning');
                        this.classList.add('btn-outline-info');
                    }
                });
            });

            // Compteur de caractères pour les commentaires par proposition
            function updatePropositionCharCount(propositionId) {
                const textarea = document.getElementById(`proposition_comment_${propositionId}`);
                const charCountSpan = document.querySelector(`.comment-char-count[data-proposition-id="${propositionId}"]`);

                if (textarea && charCountSpan) {
                    const length = textarea.value.length;
                    charCountSpan.textContent = `(${length}/1000 caractères)`;
                    charCountSpan.className = length > 900 ? 'text-warning' : length > 1000 ? 'text-danger' : 'text-muted';
                }
            }

            propositionComments.forEach(textarea => {
                const propositionId = textarea.id.replace('proposition_comment_', '');
                textarea.addEventListener('input', function() {
                    updatePropositionCharCount(propositionId);
                });
                // Initialiser le compteur
                updatePropositionCharCount(propositionId);
            });

            // Confirmation avant soumission
            form.addEventListener('submit', function(e) {
                const checkedCount = document.querySelectorAll('.proposition-checkbox:checked').length;
                if (checkedCount === 0) {
                    e.preventDefault();
                    alert('Veuillez sélectionner au moins une proposition.');
                    return;
                }

                // Vérifier la longueur des commentaires par proposition
                let hasLongComment = false;
                propositionComments.forEach(textarea => {
                    if (textarea.value.length > 1000) {
                        hasLongComment = true;
                    }
                });

                if (hasLongComment) {
                    e.preventDefault();
                    alert('Un ou plusieurs commentaires dépassent la limite de 1000 caractères.');
                    return;
                }

                const confirmMessage = `Êtes-vous sûr de vouloir créer/mettre à jour ${checkedCount} engagement(s) pour la liste "{{ candidateList.nameList }}" ?`;
                if (!confirm(confirmMessage)) {
                    e.preventDefault();
                }
            });

            // Initialiser les compteurs
            updateCounter();
            updateCharCount();
        });
    </script>

    <style>
        .proposition-item {
            transition: all 0.2s ease;
        }

        .proposition-item:hover {
            background-color: #f8f9fa !important;
            border-color: #007bff !important;
        }

        .category-header {
            font-weight: 600;
            color: #495057;
            border-left: 4px solid #007bff;
        }

        .form-check-input:checked ~ .form-check-label {
            color: #0d6efd;
        }

        .badge {
            font-size: 0.75em;
        }

        .proposition-comment-area {
            background-color: #f8f9fa;
            border-radius: 0.375rem;
            margin-top: 0.75rem;
        }

        .toggle-comment-btn {
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
        }

        .proposition-comment {
            font-size: 0.875rem;
        }

        .comment-char-count {
            font-size: 0.75rem;
        }
    </style>
{% endblock %}
